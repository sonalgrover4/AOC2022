import java.io.*;
import java.util.HashMap;
import java.util.*;


public class MyClass {
    
    public static void main(String args[])
    {
        ArrayList<ArrayList<String>> stack = new ArrayList<ArrayList<String>>();
        ArrayList<ArrayList<String>> stack_copy = new ArrayList<ArrayList<String>>();
        try  
        {  
            File file = new File("/uploads/Day_05.txt");    //creates a new file instance  
            FileReader fr=new FileReader(file);   //reads the file  
            BufferedReader br=new BufferedReader(fr);  //creates a buffering character input stream  
            String line;
            int i=0;
            int length=0;
            while((line=br.readLine())!=null)  
            {
                int l = line.length();
                if(i==0)
                {
                    length=l;
                    for(int j=1; j<=(l+1)/4; j++)
                        stack.add(new ArrayList<String>());
                    i=-1;
                }
                
                if(line.contains("["))
                {
                    for(int j=1; j<l; j=j+4)
                    {
                        String s=line.substring(j,j+1);
                        if(s.trim()!="")
                            stack.get(j/4).add(s);
                    }
                }
                
                if(l==0)
                {
                    for(int j=1; j<=(length+1)/4; j++)
                        Collections.reverse(stack.get(j-1));
                    for(int j=0; j<stack.size(); j++)
                    {
                        stack_copy.add(new ArrayList<String>());
                        for(int k=0; k<stack.get(j).size(); k++)
                        {
                            String temp=stack.get(j).get(k);
                            stack_copy.get(j).add(temp);
                        }
                    }
                    
                }
                
                if(line.contains("move"))
                {
                    String[] ins = line.split(" ");
                    int no=Integer.parseInt(ins[1]);
                    int from=Integer.parseInt(ins[3]);
                    int to=Integer.parseInt(ins[5]);
                    
                    for(int j=1; j<=no; j++)
                    {
                        int size=stack.get(from-1).size();
                        String pkt=stack.get(from-1).get(size-1);
                        stack.get(from-1).remove(size-1);
                        stack.get(to-1).add(pkt);
                    }

                    for(int k=no; k>=1; k--)
                    {
                        int size=stack_copy.get(from-1).size();
                        String pkt=stack_copy.get(from-1).get(size-k);
                        stack_copy.get(from-1).remove(size-k);
                        stack_copy.get(to-1).add(pkt);
                    }
                }
            }
            String crate="";
            String crate_copy="";
            for(int j=1; j<=(length+1)/4; j++)
            {
                int li=stack.get(j-1).size();
                String lst=stack.get(j-1).get(li-1);
                crate=crate+lst;
                
                int lc=stack_copy.get(j-1).size();
                String lstc=stack_copy.get(j-1).get(lc-1);
                crate_copy=crate_copy+lstc;
            }
            System.out.println(crate);
            System.out.println(crate_copy);
            fr.close();    //closes the stream and release the resources
        }
        catch(Exception e)  
        {  
            e.printStackTrace();  
        }
    }
}
